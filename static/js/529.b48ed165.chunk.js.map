{"version":3,"file":"static/js/529.b48ed165.chunk.js","mappings":"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","sources":["Components/ProductList/ProductList.jsx","Components/ProductSelect/ProductSelect.jsx","pages/Products/Products.jsx"],"sourcesContent":["import { memo } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nexport const ProductList = memo(({ displayedProducts }) => {\n  const ordersFromState = useSelector((state) => state.orders.orders);\n\n  return (\n    <>\n      {displayedProducts.map((item) => {\n        const relatedOrder = ordersFromState.find(\n          (order) => order.id === item.order\n        );\n        const orderTitle = relatedOrder\n          ? relatedOrder.title\n          : 'заказ не найден';\n\n        return (\n          <ListGroup horizontal key={item.id} className=\"Product m-3\">\n            <ListGroup.Item className=\"Product__block\">\n              <span>{item.title}</span>\n              <span>{item.serialNumber}</span>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"Product__block\">\n              <span>{`с ${item.guarantee.start}`}</span>\n              <span>{`по ${item.guarantee.end}`}</span>\n            </ListGroup.Item>\n            <ListGroup.Item className=\"Product__block\">\n              {item.price.map((el) => (\n                <span key={el.value}>\n                  {el.value} {el.symbol}\n                </span>\n              ))}\n            </ListGroup.Item>\n            <ListGroup.Item className=\"Product__item\">\n              {orderTitle}\n            </ListGroup.Item>\n          </ListGroup>\n        );\n      })}\n    </>\n  );\n});\n","import { memo } from 'react';\nimport { FloatingLabel, Form } from 'react-bootstrap';\n\nexport const ProductSelect = memo(({\n  handleChange,\n  displayedProducts,\n  query\n}) => {\n  return (\n    <div className=\"SelectBlock\">\n      <h2 className=\"m-3\">Продукты/ {displayedProducts.length}</h2>\n\n      <FloatingLabel controlId=\"floatingSelect\" label=\"Тип:\">\n        <Form.Select\n          className=\"SelectBlock__select\"\n          value={query}\n          onChange={handleChange}\n          aria-label=\"type\"\n        >\n          <option>Выберите тип</option>\n          <option value=\"Monitors\">Monitors</option>\n          <option value=\"Tablet\">Tablet</option>\n          <option value=\"Phone\">Phone</option>\n        </Form.Select>\n      </FloatingLabel>\n    </div>\n  );\n});\n","import { ProductList } from '../../Components/ProductList';\nimport { ProductSelect } from '../../Components/ProductSelect';\n\nimport { memo, useCallback, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\nimport './index.scss';\n\nconst Products = memo(() => {\n  const originalProducts = useSelector((state) => state.products.products);\n\n  const [query, setQuery] = useState('');\n\n  const handleChange = useCallback(\n    (e) => {\n      setQuery(e.target.value);\n    },\n    [setQuery]\n  );\n\n  let displayedProducts = originalProducts;\n\n  if (query) {\n    displayedProducts = originalProducts.filter(\n      (product) => product.type === query\n    );\n  }\n\n  return (\n    <Container>\n      <ProductSelect\n        handleChange={handleChange}\n        displayedProducts={displayedProducts}\n        query={query}\n      />\n      <ProductList displayedProducts={displayedProducts} />\n    </Container>\n  );\n});\n\nexport default Products;"],"names":["ProductList","memo","_ref","displayedProducts","ordersFromState","useSelector","state","orders","_jsx","_Fragment","children","map","item","relatedOrder","find","order","id","orderTitle","title","_jsxs","ListGroup","horizontal","className","Item","serialNumber","concat","guarantee","start","end","price","el","value","symbol","ProductSelect","handleChange","query","length","FloatingLabel","controlId","label","Form","Select","onChange","originalProducts","products","_useState","useState","_useState2","_slicedToArray","setQuery","useCallback","e","target","filter","product","type","Container"],"sourceRoot":""}